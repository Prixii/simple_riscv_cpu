$date
	Fri May 05 16:05:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_test $end
$var wire 1 ! ALU_OverFlow $end
$var wire 16 " ALU_DC [15:0] $end
$var reg 3 # ALU_CTL [2:0] $end
$var reg 16 $ ALU_DA [15:0] $end
$var reg 16 % ALU_DB [15:0] $end
$var reg 4 & ALU_SHIFT [3:0] $end
$scope module alu $end
$var wire 3 ' ALU_CTL [2:0] $end
$var wire 16 ( ALU_DA [15:0] $end
$var wire 16 ) ALU_DB [15:0] $end
$var wire 1 ! ALU_OverFlow $end
$var wire 4 * ALU_SHIFT [3:0] $end
$var wire 1 + sub_ctl $end
$var wire 16 , shift_result [15:0] $end
$var wire 2 - shift_ctl [1:0] $end
$var wire 16 . neg_ALU_DB [15:0] $end
$var wire 1 / logic_ctl $end
$var wire 16 0 arthimetic_result [15:0] $end
$var wire 2 1 Operate_CTL [1:0] $end
$var wire 1 2 ADD_carry $end
$var wire 1 3 ADD_OverFlow $end
$var reg 16 4 ALU_DC [15:0] $end
$var reg 16 5 logic_result [15:0] $end
$scope module ADD $end
$var wire 1 + ADD_Cin $end
$var wire 16 6 ADD_DA [15:0] $end
$var wire 16 7 ADD_DB [15:0] $end
$var wire 1 3 ADD_OverFlow $end
$var wire 1 2 ADD_carry $end
$var wire 16 8 ADD_DC [15:0] $end
$upscope $end
$scope module shifter $end
$var wire 16 9 ALU_DA [15:0] $end
$var wire 4 : ALU_SHIFT [3:0] $end
$var wire 2 ; shift_ctl [1:0] $end
$var wire 5 < shift_n [4:0] $end
$var reg 16 = shift_result [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 =
b10000 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
03
02
b0 1
b0 0
0/
b0 .
b0 -
b0 ,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
z!
$end
#200
12
b111111110000 .
b111111110000 7
b111111110000 "
b111111110000 4
b1 1
b10 -
b10 ;
b111111100000 0
b111111100000 8
b1111111111110000 ,
b1111111111110000 =
b111111110000 5
b10 #
b10 '
b111111110000 %
b111111110000 )
b1111111111110000 $
b1111111111110000 (
b1111111111110000 6
b1111111111110000 9
#400
b1111000000001111 .
b1111000000001111 7
b1111111111110000 "
b1111111111110000 4
b1111000000000000 0
b1111000000000000 8
b1111111111110000 5
1+
1/
b11 -
b11 ;
b11 #
b11 '
#600
b0 .
b0 7
b0 "
b0 4
b0 1
0+
0/
b0 -
b0 ;
b0 0
b0 8
02
b0 ,
b0 =
b0 5
b0 #
b0 '
b0 %
b0 )
b0 $
b0 (
b0 6
b0 9
